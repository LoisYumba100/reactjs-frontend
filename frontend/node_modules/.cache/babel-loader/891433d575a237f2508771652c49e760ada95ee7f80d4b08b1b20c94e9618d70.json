{"ast":null,"code":"const validate = values => {\n  let errors = {};\n  if (!values.firstName.trim()) {\n    errors.firstName = \"first name is required\";\n  }\n  if (!values.lastName.trim()) {\n    errors.lastName = \"last name is required\";\n  }\n  if (!values.email) {\n    errors.email = \"email is required\";\n  } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(values.email)) {\n    errors.email = \"invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"password is required\";\n  } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})/.test(values.password)) {\n    errors.password = \"weak password\";\n  }\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"confirm password is required\";\n  } else if (values.confirmPassword !== values.password) {\n    errors.confirmPassword = \"passwords do not match\";\n  }\n  return errors;\n};\nexport default validate;","map":{"version":3,"names":["validate","values","errors","firstName","trim","lastName","email","test","password","confirmPassword"],"sources":["C:/Users/Lois Yumba/Desktop/front-end-react/frontend/src/helpers/validation.js"],"sourcesContent":["const validate = (values) => {\r\n    let errors = {};\r\n  \r\n    if (!values.firstName.trim()) {\r\n      errors.firstName = \"first name is required\";\r\n    }\r\n    if (!values.lastName.trim()) {\r\n      errors.lastName = \"last name is required\";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"email is required\";\r\n    } else if (\r\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(values.email)\r\n    ) {\r\n      errors.email = \"invalid email address\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"password is required\";\r\n    } else if (\r\n      !/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})/.test(\r\n        values.password\r\n      )\r\n    ) {\r\n      errors.password = \"weak password\";\r\n    }\r\n    if (!values.confirmPassword) {\r\n      errors.confirmPassword = \"confirm password is required\";\r\n    } else if (values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = \"passwords do not match\";\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n  \r\n  export default validate;"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,MAAM,IAAK;EACzB,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAI,CAACD,MAAM,CAACE,SAAS,CAACC,IAAI,EAAE,EAAE;IAC5BF,MAAM,CAACC,SAAS,GAAG,wBAAwB;EAC7C;EACA,IAAI,CAACF,MAAM,CAACI,QAAQ,CAACD,IAAI,EAAE,EAAE;IAC3BF,MAAM,CAACG,QAAQ,GAAG,uBAAuB;EAC3C;EACA,IAAI,CAACJ,MAAM,CAACK,KAAK,EAAE;IACjBJ,MAAM,CAACI,KAAK,GAAG,mBAAmB;EACpC,CAAC,MAAM,IACL,CAAC,+CAA+C,CAACC,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EACnE;IACAJ,MAAM,CAACI,KAAK,GAAG,uBAAuB;EACxC;EACA,IAAI,CAACL,MAAM,CAACO,QAAQ,EAAE;IACpBN,MAAM,CAACM,QAAQ,GAAG,sBAAsB;EAC1C,CAAC,MAAM,IACL,CAAC,8DAA8D,CAACD,IAAI,CAClEN,MAAM,CAACO,QAAQ,CAChB,EACD;IACAN,MAAM,CAACM,QAAQ,GAAG,eAAe;EACnC;EACA,IAAI,CAACP,MAAM,CAACQ,eAAe,EAAE;IAC3BP,MAAM,CAACO,eAAe,GAAG,8BAA8B;EACzD,CAAC,MAAM,IAAIR,MAAM,CAACQ,eAAe,KAAKR,MAAM,CAACO,QAAQ,EAAE;IACrDN,MAAM,CAACO,eAAe,GAAG,wBAAwB;EACnD;EAEA,OAAOP,MAAM;AACf,CAAC;AAED,eAAeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}